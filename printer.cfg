[include macros.cfg]
[include motors.cfg]
[include klicky-probe.cfg]
[include z_calibration.cfg]
[include plotter.cfg]
[include timelapse.cfg]
[include print_area_bed_mesh.cfg]


[mcu]
## Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_0E000C00145053424E363620-if00
# restart_method: command


[printer]
kinematics: corexy
max_velocity: 500  
max_accel: 10000    			
max_z_velocity: 40 
max_z_accel: 500
square_corner_velocity: 10.0

[exclude_object]

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
    175,175,30

[heater_bed]
heater_pin: PA3
sensor_type: Generic 3950
sensor_pin: PF5
##	Adjust Max Power so your heater doesn't warp your bed
max_power: 0.66
min_temp: 15
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

[thermistor NTC100k3950_airtemp]
temperature1: 20
resistance1: 125245
temperature2: 50
resistance2: 35900
temperature3: 80
resistance3: 12933

[thermistor chamber_temp]
temperature1: 25
resistance1: 10000
beta: 3950

[temperature_sensor Chamber]
sensor_type: chamber_temp
sensor_pin: PF7
min_temp: 15
max_temp: 100
gcode_id: C

[z_thermal_adjust]
temp_coeff: 0.0133
# temp_coeff: 0.0
#   The temperature coefficient of expansion, in mm/K. For example, a
#   temp_coeff of 0.01 mm/K will move the Z axis downwards by 0.01 mm for every
#   Kelvin/degree celcius that the frame temperature increases. Defaults to 0.0,
#   no offset.
smooth_time: 2
#   Smoothing window applied to the temperature sensor, in seconds. Can reduce
#   motor noise from excessive small corrections in response to sensor noise.
#   The default is 2.0 seconds.
#z_adjust_off_above:
#   Disables adjustments above this Z height [mm]. The last computed correction
#   will remain applied until the toolhead moves below the specified Z height
#   again. The default is 99999999.0 mm (always on).
#max_z_adjustment:
#   Maximum absolute adjustment that can be applied to the Z axis [mm]. The
#   default is 99999999.0 mm (unlimited).
sensor_type: NTC100k3950_airtemp
sensor_pin: PF6
min_temp: 15
max_temp: 80
#   Temperature sensor configuration.
#   See the "extruder" section for the definition of the above
#   parameters.
#gcode_id:
#   See the "heater_generic" section for the definition of this
#   parameter.




[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor Octopus MCU]
sensor_type: temperature_mcu
sensor_mcu: mcu


# [filament_motion_sensor BTT_SmartFilamentSensor]
# detection_length: 7.0
# #   The minimum length of filament pulled through the sensor to trigger
# #   a state change on the switch_pin
# #   Default is 7 mm.
# extruder: extruder
# #   The name of the extruder section this sensor is associated with.
# #   This parameter must be provided.
# switch_pin: ^PG15
# pause_on_runout: True
# # runout_gcode: UNLOAD_FILAMENT
# insert_gcode: LOAD_FILAMENT
# #event_delay:
# pause_delay: 1
# #   See the "filament_switch_sensor" section for a description of the
# #   above parameters.

[probe]
pin: ^PG10
x_offset: 0
y_offset: 19.75
z_offset: 6.42
speed: 2.0
lift_speed: 5.0
samples: 1
samples_result: median
sample_retract_dist: 0.9
samples_tolerance: 0.006
samples_tolerance_retries: 5
drop_first_result: True

# fan for hotend FAN2
[heater_fan hotend_fan]
pin: PA8
shutdown_speed: 1
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 55.0

# [multi_pin stepper_fan_pin]
# pins: !PE5, PB7

# Exhaust fan
[fan_generic Exhaust_Fan]
##	Controller fan
pin: PD15
kick_start_time: 0.5


# Nevermore fan
[fan_generic Nevermore]
##	Controller fan
pin: PB10
kick_start_time: 0.5

# Stepstick fan
[controller_fan Stepstick_fan]
##	Controller fan
pin: PD14
kick_start_time: 0.5
fan_speed: 0.45
idle_timeout: 60


# [fan_generic exhaust_fan]
# #	Exhaust fan - Z board, HE0 Connector
# pin: PB6
# kick_start_time: 0.5


#Part cooling fan - FAN1
[fan]
pin: PE5
cycle_time: 0.1

kick_start_time: 0.2
off_below: 0.10

[force_move]
enable_force_move: True

[gcode_arcs]
resolution: 0.1
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm.


# [filament_switch_sensor filament_runout]
# switch_pin: PA2
# pause_on_runout: True
# #   When set to True, a PAUSE will execute immediately after a runout
# #   is detected. Note that if pause_on_runout is False and the
# #   runout_gcode is omitted then runout detection is disabled. Default
# #   is True.
# #runout_gcode:
# #   A list of G-Code commands to execute after a filament runout is
# #   detected. See docs/Command_Templates.md for G-Code format. If
# #   pause_on_runout is set to True this G-Code will run after the
# #   PAUSE is complete. The default is not to run any G-Code commands.
# #insert_gcode:
# #   A list of G-Code commands to execute after a filament insert is
# #   detected. See docs/Command_Templates.md for G-Code format. The
# #   default is not to run any G-Code commands, which disables insert
# #   detection.
# event_delay: 3.0
# #   The minimum amount of time in seconds to delay between events.
# #   Events triggered during this time period will be silently
# #   ignored. The default is 3 seconds.
# #pause_delay: 0.5
# #   The amount of time to delay, in seconds, between the pause command
# #   dispatch and execution of the runout_gcode. It may be useful to
# #   increase this delay if OctoPrint exhibits strange pause behavior.
# #   Default is 0.5 seconds.


[endstop_phase]


[idle_timeout]
timeout: 3600


[quad_gantry_level]
##	Use QUAD_GANTRY_LEVEL to level a gantry.
##	Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##	MAX (250, 250), (300,300), or (350,350) depending on your printer size
##	to respective belt positions
##	Gantry Corners for 350mm Build
gantry_corners:
	-60,-10
	410,420
#	Probe points
points:
	50,25
	50,275
	300,275
	300,25
#--------------------------------------------------------------------
speed: 350
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10


#fan for control board FAN2
#[heater_fan my_control_fan]
#pin: PB2

#####################################################################
# LED Control
#####################################################################
[multi_pin caselight_pin]
pins: PD12, PD13

[output_pin caselight]
pin: multi_pin:caselight_pin


[virtual_sdcard]
path: ~/printer_data/gcodes

[display_status]

[pause_resume]

##FOLLOW THE FORUMULA FOR relative_reference_index, for example 7x7:
##[(7x7)-1] / 2 = 24
##[(5x5)-1] / 2 = 12
[bed_mesh]
mesh_min: 25,25
mesh_max: 325,325
speed: 350
horizontal_move_z: 10
probe_count: 5
# bicubic or lagrange
algorithm: bicubic
relative_reference_index: 12
fade_start: 0.6
#   The gcode z position in which to start phasing out z-adjustment
#   when fade is enabled. Default is 1.0.
fade_end: 10
#   The gcode z position in which phasing out completes. When set to a
#   value below fade_start, fade is disabled. It should be noted that
#   fade may add unwanted scaling along the z-axis of a print. If a
#   user wishes to enable fade, a value of 10.0 is recommended.
#   Default is 0.0, which disables fade.
#fade_target: 0
#   The z position in which fade should converge. When this value is
#   set to a non-zero value it must be within the range of z-values in
#   the mesh. Users that wish to converge to the z homing position
#   should set this to 0. Default is the average z value of the mesh.
move_check_distance: 3
#   The distance (in mm) along a move to check for split_delta_z.
#   This is also the minimum length that a move can be split. Default
#   is 5.0.
split_delta_z: 0.025
#   The amount of Z difference (in mm) along a move that will
#   trigger a split. Default is .025.
mesh_pps: 4,4
#   A comma separated pair of integers (X,Y) defining the number of
#   points per segment to interpolate in the mesh along each axis. A
#   "segment" can be defined as the space between each probed
#   point. The user may enter a single value which will be applied
#   to both axes.  Default is 2,2.
#bicubic_tension: 0.2
#   When using the bicubic algorithm the tension parameter above
#   may be applied to change the amount of slope interpolated.
#   Larger numbers will increase the amount of slope, which
#   results in more curvature in the mesh. Default is .2.


[respond]
default_type: echo
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "!! "
#default_prefix: echo:
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".


#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 39.489
#*# pid_ki = 1.605
#*# pid_kd = 242.858
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 24.457
#*# pid_ki = 1.094
#*# pid_kd = 136.653
#*#
#*# [stepper_z]
#*# position_endstop = 2.664
#*#
#*# [probe]
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 53.0
#*# shaper_type_y = mzv
#*# shaper_freq_y = 36.6
#*#
#*# [endstop_phase stepper_z]
#*# trigger_phase = 198/256
